<?php

namespace ContainerMV70dLz;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_OJXfgphService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.OJXfgph' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.OJXfgph'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.4wc4Ag1.kernel::registerContainerConfiguration()', 'get_ServiceLocator_4wc4Ag1_KernelregisterContainerConfigurationService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.4wc4Ag1.kernel::registerContainerConfiguration()', 'get_ServiceLocator_4wc4Ag1_KernelregisterContainerConfigurationService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.4wc4Ag1.kernel::loadRoutes()', 'get_ServiceLocator_4wc4Ag1_KernelloadRoutesService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.4wc4Ag1.kernel::loadRoutes()', 'get_ServiceLocator_4wc4Ag1_KernelloadRoutesService', true],
            'App\\Controller\\DocumentController::index' => ['privates', '.service_locator.6YfNnC6.App\\Controller\\DocumentController::index()', 'getDocumentControllerindexService', true],
            'App\\Controller\\DocumentController::index_json' => ['privates', '.service_locator.SOia4js.App\\Controller\\DocumentController::index_json()', 'getDocumentControllerindexJsonService', true],
            'App\\Controller\\DocumentController::show' => ['privates', '.service_locator.Wu_EQzd.App\\Controller\\DocumentController::show()', 'getDocumentControllershowService', true],
            'App\\Controller\\SourceController::index' => ['privates', '.service_locator.rP06vd5.App\\Controller\\SourceController::index()', 'getSourceControllerindexService', true],
            'App\\Controller\\SourceController::new' => ['privates', '.service_locator.P.blNFL.App\\Controller\\SourceController::new()', 'getSourceControllernewService', true],
            'App\\Controller\\SourceController::show' => ['privates', '.service_locator.kIy_58K.App\\Controller\\SourceController::show()', 'getSourceControllershowService', true],
            'App\\Controller\\SourceController::edit' => ['privates', '.service_locator.WDauLPg.App\\Controller\\SourceController::edit()', 'getSourceControllereditService', true],
            'App\\Controller\\SourceController::delete' => ['privates', '.service_locator.WDauLPg.App\\Controller\\SourceController::delete()', 'getSourceControllerdeleteService', true],
            'App\\Controller\\SourceLevelController::index' => ['privates', '.service_locator.Sbr1ElV.App\\Controller\\SourceLevelController::index()', 'getSourceLevelControllerindexService', true],
            'App\\Controller\\SourceLevelController::new' => ['privates', '.service_locator.P.blNFL.App\\Controller\\SourceLevelController::new()', 'getSourceLevelControllernewService', true],
            'App\\Controller\\SourceLevelController::show' => ['privates', '.service_locator.oR0boeY.App\\Controller\\SourceLevelController::show()', 'getSourceLevelControllershowService', true],
            'App\\Controller\\SourceLevelController::edit' => ['privates', '.service_locator.SKCHlbO.App\\Controller\\SourceLevelController::edit()', 'getSourceLevelControllereditService', true],
            'App\\Controller\\SourceLevelController::delete' => ['privates', '.service_locator.SKCHlbO.App\\Controller\\SourceLevelController::delete()', 'getSourceLevelControllerdeleteService', true],
            'Dukecity\\CommandSchedulerBundle\\Entity\\ScheduledCommand::setLastExecution' => ['privates', '.service_locator.cDRr68t.Dukecity\\CommandSchedulerBundle\\Entity\\ScheduledCommand::setLastExecution()', 'getScheduledCommandsetLastExecutionService', true],
            'Dukecity\\CommandSchedulerBundle\\Entity\\ScheduledCommand::setCreatedAt' => ['privates', '.service_locator.d9q2ffH.Dukecity\\CommandSchedulerBundle\\Entity\\ScheduledCommand::setCreatedAt()', 'getScheduledCommandsetCreatedAtService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.4wc4Ag1.kernel::registerContainerConfiguration()', 'get_ServiceLocator_4wc4Ag1_KernelregisterContainerConfigurationService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.4wc4Ag1.kernel::loadRoutes()', 'get_ServiceLocator_4wc4Ag1_KernelloadRoutesService', true],
            'App\\Controller\\DocumentController:index' => ['privates', '.service_locator.6YfNnC6.App\\Controller\\DocumentController::index()', 'getDocumentControllerindexService', true],
            'App\\Controller\\DocumentController:index_json' => ['privates', '.service_locator.SOia4js.App\\Controller\\DocumentController::index_json()', 'getDocumentControllerindexJsonService', true],
            'App\\Controller\\DocumentController:show' => ['privates', '.service_locator.Wu_EQzd.App\\Controller\\DocumentController::show()', 'getDocumentControllershowService', true],
            'App\\Controller\\SourceController:index' => ['privates', '.service_locator.rP06vd5.App\\Controller\\SourceController::index()', 'getSourceControllerindexService', true],
            'App\\Controller\\SourceController:new' => ['privates', '.service_locator.P.blNFL.App\\Controller\\SourceController::new()', 'getSourceControllernewService', true],
            'App\\Controller\\SourceController:show' => ['privates', '.service_locator.kIy_58K.App\\Controller\\SourceController::show()', 'getSourceControllershowService', true],
            'App\\Controller\\SourceController:edit' => ['privates', '.service_locator.WDauLPg.App\\Controller\\SourceController::edit()', 'getSourceControllereditService', true],
            'App\\Controller\\SourceController:delete' => ['privates', '.service_locator.WDauLPg.App\\Controller\\SourceController::delete()', 'getSourceControllerdeleteService', true],
            'App\\Controller\\SourceLevelController:index' => ['privates', '.service_locator.Sbr1ElV.App\\Controller\\SourceLevelController::index()', 'getSourceLevelControllerindexService', true],
            'App\\Controller\\SourceLevelController:new' => ['privates', '.service_locator.P.blNFL.App\\Controller\\SourceLevelController::new()', 'getSourceLevelControllernewService', true],
            'App\\Controller\\SourceLevelController:show' => ['privates', '.service_locator.oR0boeY.App\\Controller\\SourceLevelController::show()', 'getSourceLevelControllershowService', true],
            'App\\Controller\\SourceLevelController:edit' => ['privates', '.service_locator.SKCHlbO.App\\Controller\\SourceLevelController::edit()', 'getSourceLevelControllereditService', true],
            'App\\Controller\\SourceLevelController:delete' => ['privates', '.service_locator.SKCHlbO.App\\Controller\\SourceLevelController::delete()', 'getSourceLevelControllerdeleteService', true],
            'Dukecity\\CommandSchedulerBundle\\Entity\\ScheduledCommand:setLastExecution' => ['privates', '.service_locator.cDRr68t.Dukecity\\CommandSchedulerBundle\\Entity\\ScheduledCommand::setLastExecution()', 'getScheduledCommandsetLastExecutionService', true],
            'Dukecity\\CommandSchedulerBundle\\Entity\\ScheduledCommand:setCreatedAt' => ['privates', '.service_locator.d9q2ffH.Dukecity\\CommandSchedulerBundle\\Entity\\ScheduledCommand::setCreatedAt()', 'getScheduledCommandsetCreatedAtService', true],
        ], [
            'kernel::registerContainerConfiguration' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Controller\\DocumentController::index' => '?',
            'App\\Controller\\DocumentController::index_json' => '?',
            'App\\Controller\\DocumentController::show' => '?',
            'App\\Controller\\SourceController::index' => '?',
            'App\\Controller\\SourceController::new' => '?',
            'App\\Controller\\SourceController::show' => '?',
            'App\\Controller\\SourceController::edit' => '?',
            'App\\Controller\\SourceController::delete' => '?',
            'App\\Controller\\SourceLevelController::index' => '?',
            'App\\Controller\\SourceLevelController::new' => '?',
            'App\\Controller\\SourceLevelController::show' => '?',
            'App\\Controller\\SourceLevelController::edit' => '?',
            'App\\Controller\\SourceLevelController::delete' => '?',
            'Dukecity\\CommandSchedulerBundle\\Entity\\ScheduledCommand::setLastExecution' => '?',
            'Dukecity\\CommandSchedulerBundle\\Entity\\ScheduledCommand::setCreatedAt' => '?',
            'kernel:registerContainerConfiguration' => '?',
            'kernel:loadRoutes' => '?',
            'App\\Controller\\DocumentController:index' => '?',
            'App\\Controller\\DocumentController:index_json' => '?',
            'App\\Controller\\DocumentController:show' => '?',
            'App\\Controller\\SourceController:index' => '?',
            'App\\Controller\\SourceController:new' => '?',
            'App\\Controller\\SourceController:show' => '?',
            'App\\Controller\\SourceController:edit' => '?',
            'App\\Controller\\SourceController:delete' => '?',
            'App\\Controller\\SourceLevelController:index' => '?',
            'App\\Controller\\SourceLevelController:new' => '?',
            'App\\Controller\\SourceLevelController:show' => '?',
            'App\\Controller\\SourceLevelController:edit' => '?',
            'App\\Controller\\SourceLevelController:delete' => '?',
            'Dukecity\\CommandSchedulerBundle\\Entity\\ScheduledCommand:setLastExecution' => '?',
            'Dukecity\\CommandSchedulerBundle\\Entity\\ScheduledCommand:setCreatedAt' => '?',
        ]);
    }
}
