<?php

namespace ContainerI1Luur3;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getCommandSchedulerExecutionService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Dukecity\CommandSchedulerBundle\Service\CommandSchedulerExecution' shared autowired service.
     *
     * @return \Dukecity\CommandSchedulerBundle\Service\CommandSchedulerExecution
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/dukecity/command-scheduler-bundle/Service/CommandSchedulerExecution.php';

        return $container->services['Dukecity\\CommandSchedulerBundle\\Service\\CommandSchedulerExecution'] = new \Dukecity\CommandSchedulerBundle\Service\CommandSchedulerExecution(($container->services['kernel'] ?? $container->get('kernel', 1)), ($container->privates['parameter_bag'] ??= new \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag($container)), ($container->privates['monolog.logger'] ?? self::getMonolog_LoggerService($container)), ($container->services['event_dispatcher'] ?? self::getEventDispatcherService($container)), ($container->services['doctrine'] ?? self::getDoctrineService($container)), 'default', (\dirname(__DIR__, 3).'/log'));
    }
}
